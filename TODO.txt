1. Добавить структуру, отслеживающую использование блоков и позволяющую получить блоки, которые дольше всего не используются. Простейший вариант - список + вектор итераторов на элементы (чтобы быстро их из этого списка извлекать). Дополнительно требует 32 байта на блок. При выделении памяти в getBlock в случае отсутствия свободных блоков делать своп самого неиспользуемого блока.

3. Реализовать автоматические блокировки и разблокировки (чтобы не писать руками block.lock() и block.unlock(). Можно блокировку делать в операторе &block, а разблокировку при заверешении выражения в котором использовалась &block. Это можно сделать через временный объект, созданный при вызове & + ссылыка на него. Такой временный объект будет уничтожен при выходе из выражения, в котором он создан.

4. Создать набор пулов разного размера и менеджер пулов. Может быть добавить пул верхнего уровня, который изначально выделяется все память (блоками наибольшего размера), а затем раздает ее пулам нижнего уровня? Тогда можно было бы сделать возврат неиспользуемых блоков обратно в пул верхнего уровня и, как следствие, более адаптивное перераспределение между пулами, но это трудоемкая задача. Лучше пока не надо.
